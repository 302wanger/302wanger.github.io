<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>leetcode-7-Z字形变换</title>
      <link href="/2020/03/11/leetcode-7-Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/"/>
      <url>/2020/03/11/leetcode-7-Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="一：题目："><a href="#一：题目：" class="headerlink" title="一：题目："></a>一：题目：</h2><p>将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。</p><p>比如输入字符串为 “LEETCODEISHIRING” 行数为 3 时，排列如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">L   C   I   R</span><br><span class="line">E T O E S I I G</span><br><span class="line">E   D   H   N</span><br></pre></td></tr></table></figure><p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：”LCIRETOESIIGEDHN”。</p><p>请你实现这个将字符串进行指定行数变换的函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string convert(string s, int numRows);</span><br></pre></td></tr></table></figure><p>示例1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s &#x3D; &quot;LEETCODEISHIRING&quot;, numRows &#x3D; 3</span><br><span class="line">输出: &quot;LCIRETOESIIGEDHN&quot;</span><br></pre></td></tr></table></figure><p>示例2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">输入: s &#x3D; &quot;LEETCODEISHIRING&quot;, numRows &#x3D; 4</span><br><span class="line">输出: &quot;LDREOEIIECIHNTSG&quot;</span><br><span class="line">解释:</span><br><span class="line"></span><br><span class="line">L     D     R</span><br><span class="line">E   O E   I I</span><br><span class="line">E C   I H   N</span><br><span class="line">T     S     G</span><br></pre></td></tr></table></figure><h2 id="二：思路解析"><a href="#二：思路解析" class="headerlink" title="二：思路解析"></a>二：思路解析</h2><ol><li>首先分析题目，输出内容其实就是重排之后的各行相加，那么问题就变为了按照规律排列，序号为n的字符在第几行</li><li>可以把字符串分为几组，然后每组按照规律push到不同行中，最后各行相加得出结果</li></ol><h2 id="三：解决代码JavaScript版本："><a href="#三：解决代码JavaScript版本：" class="headerlink" title="三：解决代码JavaScript版本："></a>三：解决代码JavaScript版本：</h2><p>我的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">var convert &#x3D; function(s, numRows) &#123;</span><br><span class="line">    if (numRows &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">        return &#39;&#39;;</span><br><span class="line">    &#125; else if (numRows &#x3D;&#x3D;&#x3D; 1) &#123;</span><br><span class="line">        return s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var res &#x3D; [];</span><br><span class="line">    var desc &#x3D; false;</span><br><span class="line">    var index &#x3D; 0;</span><br><span class="line">    var length &#x3D; s.length</span><br><span class="line"></span><br><span class="line">    for (var i &#x3D; 0; i &lt; length; i++) &#123;</span><br><span class="line">        &#x2F;&#x2F; console.log(&quot;res[index] is &#x3D;&#x3D;&#x3D;&gt;&gt;&gt;&quot;, res[index])</span><br><span class="line">        res[index] &#x3D; res[index] ? res[index] + s[i] : s[i]</span><br><span class="line"></span><br><span class="line">        if (index % (numRows - 1) &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">            desc &#x3D; !desc;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; console.log(&quot;index is &#x3D;&#x3D;&#x3D;&gt;&gt;&gt;&quot;, index)</span><br><span class="line">        index &#x3D; desc ? index + 1: index - 1;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; console.log(&#39;for over res is &#x3D;&#x3D;&#x3D;&gt;&gt;&gt;&#39;, res)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return res.join(&#39;&#39;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优秀答案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">var betterConvert &#x3D; function(s, numRows) &#123;</span><br><span class="line">    var map &#x3D; &#123;&#125;</span><br><span class="line">    var j &#x3D; 0;</span><br><span class="line">    if (numRows &lt;&#x3D; 1) &#123;</span><br><span class="line">        return s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var boo &#x3D; true;</span><br><span class="line">    for (var i &#x3D; 0; i &lt; s.length; i++) &#123;</span><br><span class="line">        if (!map[j]) &#123;</span><br><span class="line">            map[j] &#x3D; &#39;&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        map[j] &#x3D; map[j] + s[i];</span><br><span class="line"></span><br><span class="line">        if (boo) &#123;</span><br><span class="line">            j++;</span><br><span class="line">            if (j &gt;&#x3D; numRows) &#123;</span><br><span class="line">                j &#x3D; j -2;</span><br><span class="line">                boo &#x3D; false;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            j--;</span><br><span class="line">            if (j &lt; 0) &#123;</span><br><span class="line">                boo &#x3D; true;</span><br><span class="line">                j &#x3D; j + 2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    s &#x3D; &#39;&#39;;</span><br><span class="line">    Object.keys(map).forEach(i &#x3D;&gt; &#123;</span><br><span class="line">        s &#x3D; s + map[i];</span><br><span class="line">    &#125;)</span><br><span class="line">    return s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四：总结："><a href="#四：总结：" class="headerlink" title="四：总结："></a>四：总结：</h2><ol><li>优秀答案为使用了Map，执行效率确实比数组更好</li><li>代码运行时可以打印下运行过程，这样有助于理解</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>secone article</title>
      <link href="/2020/03/09/secone-article/"/>
      <url>/2020/03/09/secone-article/</url>
      
        <content type="html"><![CDATA[<p>second article</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/03/09/hello-world/"/>
      <url>/2020/03/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>my first article</title>
      <link href="/2020/03/09/my-first-article/"/>
      <url>/2020/03/09/my-first-article/</url>
      
        <content type="html"><![CDATA[<p>我是 first article</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
